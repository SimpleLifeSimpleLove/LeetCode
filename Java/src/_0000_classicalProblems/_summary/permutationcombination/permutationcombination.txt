Leetcode 0046
// 给定一个 没有重复 数字的序列，返回其所有可能的全排列。
// 示例:
// 输入: [1,2,3]
// 输出:
// [
//  [1,2,3],
//  [1,3,2],
//  [2,1,3],
//  [2,3,1],
//  [3,1,2],
//  [3,2,1]
// ]


Leetcode 0060
// 给出集合 [1,2,3,…,n]，其所有元素共有 n! 种排列。按大小顺序列出所有排列情况，并一一标记，当 n = 3 时, 所有排列如下：
// "123","132","213","231","312","321"
// 给定 n 和 k，返回第 k 个排列。
//
// 说明：
// 给定 n 的范围是 [1, 9]。
// 给定 k 的范围是[1, n!]。
// 示例 1:
// 输入: n = 3, k = 3
// 输出: "213"


Leetcode 0017
// 给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。
// 给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。
// 示例:
// 输入："23"
// 输出：["ad", "ae", "af", "bd", "be", "bf", "cd", "ce", "cf"].


Leetcode 0077
// 给定两个整数 n 和 k，返回 1 ... n 中所有可能的 k 个数的组合。
// 示例:
// 输入: n = 4, k = 2
// 输出:
// [
//  [2,4],
//  [3,4],
//  [2,3],
//  [1,2],
//  [1,3],
//  [1,4],
// ]


Leetcode 0039  组合总和         (回溯问题)
// 给定一个无重复元素的数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。
// candidates 中的数字可以无限制重复被选取。
// 说明：
// 所有数字（包括 target）都是正整数。
// 解集不能包含重复的组合。
// 示例 1：
// 输入：candidates = [2,3,6,7], target = 7,
// 所求解集为：
// [
//  [7],
//  [2,2,3]
// ]


Leetcode 0377  组合总和 Ⅳ       (背包问题)
// 给定一个由正整数组成且不存在重复数字的数组，找出和为给定目标正整数的组合的个数。
// 示例:
// nums = [1, 2, 3]
// target = 4
// 所有可能的组合为：(1, 1, 1, 1),(1, 1, 2),(1, 2, 1),(1, 3),(2, 1, 1),(2, 2),(3, 1)
// 请注意，顺序不同的序列被视作不同的组合。
// 因此输出为 7。


