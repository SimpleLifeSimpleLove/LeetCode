猜数字大小II
//我们正在玩一个猜数游戏，游戏规则如下：
//
// 我从 1 到 n 之间选择一个数字，你来猜我选了哪个数字。
//
// 每次你猜错了，我都会告诉你，我选的数字比你的大了或者小了。
//
// 然而，当你猜了数字 x 并且猜错了的时候，你需要支付金额为 x 的现金。直到你猜到我选的数字，你才算赢得了这个游戏。
//
// 示例:
//
// n = 10, 我选择了8.
//
//第一轮: 你猜我选择的数字是5，我会告诉你，我的数字更大一些，然后你需要支付5块。
//第二轮: 你猜是7，我告诉你，我的数字更大一些，你支付7块。
//第三轮: 你猜是9，我告诉你，我的数字更小一些，你支付9块。
//
//游戏结束。8 就是我选的数字。
//
//你最终要支付 5 + 7 + 9 = 21 块钱。
//
//
// 给定 1 ≤ n ≤ 200，计算你至少需要拥有多少现金才能确保你能赢得这个游戏。
// Related Topics 极小化极大 动态规划
// 👍 195 👎 0


https://leetcode-cn.com/problems/guess-number-higher-or-lower-ii/solution/dong-tai-gui-hua-c-you-tu-jie-by-zhang-xiao-tong-2/
例子：帮助理解
比如 n = 3

猜1：
答案是1，花费0元
答案是2或者3，这个时候会进入另一个区间[2,3]，花费1+dp[2][3]元
必定赢得游戏，最多花费max(0,1+dp[2][3])元   : max(0, dp[2][3]) + 1

猜2：
答案是1，花费2+dp[1][1]=2+0=2元
答案是2，花费0元
答案是3，花费2+dp[3][3]=2+0=2元
必定赢得游戏，最多花费max(0,2+dp[1][1],2+dp[3][3])元   : max(dp[1][1], dp[3][3]) + 2

猜3：
答案是1或者2,花费3+dp[1][2]元
答案是3，花费0元
必定赢得游戏，最多花费max(0,3+dp[1][2])元   : max(dp[1][2], 0) + 3

res = min(max(0, dp[2][3]) + 1, max(dp[1][1], dp[3][3]) + 2, max(dp[1][2], 0) + 3)

