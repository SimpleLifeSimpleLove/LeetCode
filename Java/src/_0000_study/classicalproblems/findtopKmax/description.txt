
寻找数组中的前K大的数据：
时间复杂度：O(n + k*log(n))

思想如下：用例子演示:
    nums : [3, 2, 1, 5]
    寻找最大值：从低向上，两两对比
                5
              /   \
            3*     5
          /  \    /  \
         3    2  1*   5

    寻找第二大的数据：从顶向下，寻找到最大值在叶子节点的位置，然后将最大值标为 负无穷, 然后自底向上进行更新, 得到第二大的数据
                5
              /   \
            3      5
          /  \    /  \
         3    2  1    -∞

                3
              /   \
            3      1
          /  \    /  \
         3    2  1    -∞

    寻找第三大的数据：从顶向下，寻找到第二大的数据在叶子节点的位置，然后将最大值标为 负无穷 ,然后自底向上进行更新, 得到第三大的数据
                3
              /   \
            3      1
          /  \    /  \
        -∞    2  1   -∞

                2
              /   \
             2     1
          /  \    /  \
        -∞    2  1   -∞


    需要重新开辟空间：2n-1
    [5, 3, 5, 3, 2, 1, 5]
     -------  ----------
                原始数据
