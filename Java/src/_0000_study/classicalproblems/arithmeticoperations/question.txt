Leetcode 0371
不使用运算符 + 、 - 、 *、 /，计算两整数 a 、b 的加减乘除。

解法：
比如加法：a = 13, b = 11，求解 a + b
    a = 01101, b = 01011

    x = a ^ b = 00110 (无进位加法)         6
    y = (a & b) << 1 = 10010(进位)        18

    x2 = x ^ y = 10100(无进位加法)         20
    y2 = (x & y) << 1 = 00100(进位)       4

    x3 = x2 ^ y2 = 10000(无进位加法)         16
    y3 = (x2 & y2) << 1 = 01000(进位)       8

    x4 = x3 ^ y3 = 11000(无进位加法)         24
    y4 = (x3 & y3) << 1 = 00000(进位)       0

另外，如何使用位运算求解 a - b?
    我们可以求解 a + (-b)，进一步，我们如何求解 -b?
    我们知道：补码的补码是原码，因此 -b = ~b + 1;

    如何证明补码的补码是原码？
        假设计算机存储的位数为 N，那么 111...11 = 2^N - 1
        对于 n 来说，它的补码是 x, 则 x = 2^N - 1 - n + 1 = 2^N - n
                                     ___________
                                         取反
                                     _______________
                                           加一
        则 x 的补码为 y, 则 y = = 2^N - 1 - x + 1 = 2^N - 1 - (2^N - n) + 1 = n
                                ___________
                                     取反
                                _______________
                                      加一
        因此有，n 的补码是 x, x 的补码是 y, y = n, 因此：补码的补码是原码!!!

如何求解乘法？
    用加法实现乘法：a = 01101, b = 01011
    用 res = 0 记录结果
    因为 b 的最低位为1，res += a, 然后 a = (a << 1) = 11010, b = (b >> 1) = 0101
    又因为 b 的最低位为1，res += a, 然后 a = (a << 1) = 110100, b = (b >> 1) = 010
    因为 b 的最低位为0，res 不变, 然后 a = (a << 1) = 1101000, b = (b >> 1) = 01
    又因为 b 的最低位为1，res += a, 然后 a = (a << 1) = 11010000, b = (b >> 1) = 0
    因为 b = 0, 结束

    如果是乘数中有负数，转化为整数。


