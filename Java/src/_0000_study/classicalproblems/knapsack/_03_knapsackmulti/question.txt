多重背包问题：
    有一个背包，它能承受的最大重量为C（Capacity）。现在由n种不同类别的物品，编号为0...n-1，
    其中每一件物品的重量为weights[i]，价值为values[i]，数量为nums[i]。
    问可以向这个背包中盛放哪些物品，使得在不超过背包容量的基础上，物品的总价值最大。

暴力解法：每一件物品放进背包的次数最多为C次：O(n * C * t)  其中 t = max(nums)

动态规划解法：
    状态：dp(n, C) 考虑将前n个物品放进容量为C的背包，使得价值最大
    状态转移方程：dp(i, c) = max(dp(i-1, c), dp( i - 1 , c - w(i) * k) + v(i) * k)，
            其中1 <= k <= m(i)，w(i) * k <= c
    具体实现：自上而下（记忆化搜索），自下而上（动态规划）