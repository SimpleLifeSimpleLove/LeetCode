
安装mysql服务：
    mysqld --install
关闭mysql服务:
    net stop mysql
启动mysql服务：
    net start mysql
初始化数据文件：
    mysqld --initialize-insecure --user=mysql



=============================================================================
连接数据库：
    mysql -u root -p123456
修改密码：
    set password for root@localhost = password('123456');
创建数据库：
    create database `school` character set utf8 collate utf8_general_ci;
刷新权限：
    flush privileges;
查看所有的数据库：
    show databases;
使用数据库：
    user school;
显示数据库中的表：
    show tables;
查看school数据库中表的字段信息：
    describe student;
查看系统版本：
    select version();

退出连接：
    exit

SQL的单行注释：
    --
SQL的多行注释：
    /*  */




=============================================================================
数据库xxx语言：
    DDL : 数据定义语言
    DML : 数据操作语言
    DQL : 数据查询语言
    DCL : 数据控制语言

mysql数据库语句不区分大小写
之后的语句带[]表示可选，带{}表示必选


=============================================================================
数据库的列类型：
    数值：
        tinyint         十分小的数据      1个字节
        smallint        较小的数据       2个字节
        mediumint       中等大小的数据    3个字节
        int             标准的整数       4个字节(常用)
        bigint          较大的数据       8个字节

        float           浮点数          4个字节
        double          浮点数          8个字节
        decimal         字符串形式的浮点数          金融计算的时候，使用这个

    字符串：
        char            固定大小的字符串        0~255
        varchar         可变字符串             0~65535(常用)
        tinytext        微型文本               0~255
        text            文本串                0~65535(保存大文本)

    时间日期：
        date            日期格式            YYYY-MM-DD
        time            时间格式            HH:mm:ss
        datetime        时间格式格式         YYYY-MM-DD HH:mm:ss(常用)
        timestamp       时间戳              1970.1.1到现在的毫秒数(常用)
        year            年份表示

    null：没有值；注意，不要使用null进行运算，即使运算了结果也为null
=============================================================================

数据库的字段属性(重点)
    Unsigned:
        无符号的整数
        声明了该属性的列的取值不能为负数

    zerofill:
        0填充
        不足的位数，使用0填充，int(3), 5 --> 005

    自增：
        自动在上一条记录的基础上+1(默认)
        通常用来设计唯一的主键，必须是整数类型
        可以自定义设计主键的初始值和步长

    非空：null / not null
        假设设置为 not null, 如果不给它赋值，就会报错
        假设设置为 null, 不填写值，默认就是null

    默认：
        设置默认的值
        如果不指定该列的值，则会填充默认的值
=============================================================================

每一个表，都必须存在以下五个字段! 未来做项目用的，表示一个记录存在的意义!

id          主键
`version`   乐观锁
is_delete   伪删除
gmt_create  创建时间
gmt_update  修改时间
=============================================================================

引擎对比：
    INNODB  默认使用
        安全性高，事务的处理，多表多用户操作
    MYISAM  早些年使用的
        节约空间，速度较快

                    INNODB                  MYISAM
    事务支持          不支持                   支持
    数据行锁定        不支持                    支持
    外键约束          不支持                   支持
    全文索引          支持                     不支持
    表空间大小        较小                     较大，约为2倍

所有的数据库文件都存在data目录下：C:\ProgramData\MySQL\MySQL Server 5.1\data
这个文件夹里面的每一个文件夹就对应一个数据库
本质山MySQL还是文件的存储

MySQL引擎在物理文件上的区别：
    InnoDB在数据库表中只有一个*.frm文件，以及上级目录下的 ibdata1 文件
    MYISAM对应文件：
        *.frm   表结构的定义文件
        *.MYD   数据文件(data)
        *.MYI   索引文件(index)


设置数据库表的字符集编码：charset=utf8
不设置的话会使用MySQL的默认编码(不支持中文)
MySQL的默认编码是Latin1，不支持中文
如果想要支持中文，有两种方式：
    (1) 创建表的时候加上 : charset=utf8
    (2) 修改MySQL的配置文件(my.ini) : character-set-server=utf8
=============================================================================

条件：where子句

    操作符                     含义          范围          结果
    =
    <>或!=                    不等于        5<>6         true
    >
    >=
    <
    <=
    between... and ...
    and
    or


=============================================================================
 MySQL数据备份

 为什么需要备份？
    (1) 保证重要数据不丢失
    (2) 数据转移

 MySQL数据库备份的方式：
    (1) 直接拷贝物理文件
    (2) 在SQLyog这类可视化数据中手动导出
        在想要导出的表或者库中，右键，选择备份或导出
    (3) 使用命令导出 mysqldump 命令行使用
        格式：mysqldump -h主机 -u用户名 -p密码 数据库 表名 > 物理磁盘
        例子：mysqldump -hlocalhost -uroot -p123456 school student > D:/a.sql

        格式：mysqldump -h主机 -u用户名 -p密码 数据库 表1 表2 表3 > 物理磁盘
        例子：mysqldump -hlocalhost -uroot -p123456 school student result > D:/b.sql

        格式：mysqldump -h主机 -u用户名 -p密码 数据库 > 物理磁盘
        例子：mysqldump -hlocalhost -uroot -p123456 school > D:/c.sql

 根据sql文件导入数据：
    第一种方式：
        (1) 登陆情况下，切换到指定数据库：
            use school
        (2) 格式：source 备份文件
            例子：source d
    第二种方式：
        mysql -u用户名 -p密码 库名 < 备份文件









